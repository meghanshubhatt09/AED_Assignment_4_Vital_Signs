/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.City;
import model.MainSystem;
import model.Patient;
import model.Person;
import model.PersonDirectory;

/**
 *
 * @author meghanshubhatt
 */
public class ViewPersonPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewPersonPanel
     */
    private JPanel userProcessContainer;
    private Person person;
    private PersonDirectory personDirectory;
    private City city;
    private MainSystem system; 
    public ViewPersonPanel(JPanel upc, PersonDirectory pd,City cty, MainSystem sys) {
        initComponents();
        userProcessContainer = upc;
        personDirectory = pd;
        city = cty;
        system = sys;
        refreshTable();
    }
    
    public void refreshTable(){
    int rowCount = PersonViewTable.getRowCount();
    DefaultTableModel model = (DefaultTableModel) PersonViewTable.getModel();
    for(int i=rowCount-1;i>=0;i--){
        model.removeRow(i);
    }
    for (Person s : personDirectory.getPersonList()) {
        System.out.println(s);
        Object row[] = new Object[10];
        row[0] = s.getfName();
        row[1] = s.getlName();
        row[2] = s.getAge();
        row[3] = s.getGender();
        row[4] = s.getPhoneNumber();
        System.out.println(s.getHouse());
        row[5] = s.getHouse().getCommunity();
        row[6] = s.getHouse();
        row[7] = s.getHouse().getHouseNumber();
        row[8] = s.getHouse().getHouseAddress();
        row[9] = s.getHouse().getCommunity().getCity();
        //row[0] = s.getHouse().getCommunity();
        model.addRow(row);
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        PersonViewTable = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnViewDetails = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        PersonViewTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First Name", "Last Name", "Age", "Gender", "Phone Number", "Community Name", "House Name", "House Number", "House Address", "City Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(PersonViewTable);

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnViewDetails.setText("View Details!");
        btnViewDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailsActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setText("                    Person Details");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack)
                        .addGap(228, 228, 228)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 950, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnViewDetails)
                                .addGap(38, 38, 38)
                                .addComponent(btnDelete)))))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBack)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnViewDetails))
                .addContainerGap(67, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        backAction();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int ind = 0;
        boolean flag = true;
        ArrayList<Patient> patientListDummy ;
        patientListDummy = system.getPatientdirectory().getPatientList();
        int selectedRowIndex = PersonViewTable.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        //Person s = (Person) PersonViewTable.getValueAt(selectedRowIndex, 0);
        //personDirectory.getPersonList().get(selectedRowIndex);
        System.out.println("-------");
        long p = personDirectory.getPersonList().get(selectedRowIndex).getPersonId();
        personDirectory.removePerson(personDirectory.getPersonList().get(selectedRowIndex));
        refreshTable();
        personDirectory.saveFile();
        
        for (int i = 0;i < patientListDummy.size();i++)
        {
            if (patientListDummy.get(i).getPatientId() == p)
            {
                ind = i;
                flag = false;
            }
//            if (pp.getPerson().getPersonId() == p)
//            {
//                system.getPatientdirectory().removePatient(pp);
//            }
        }
        if (flag==false){
            system.getPatientdirectory().getPatientList().remove(ind);
            system.getPatientdirectory().saveFile();
        }
        
        
        
        
        
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnViewDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailsActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = PersonViewTable.getSelectedRow();
        
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select the record");
            return; 
        }
        // personDirectory.getPersonList().get(selecteRowIndex)
    System.out.println(selectedRowIndex);
    ViewUpdatePerson viewupdateperson = new ViewUpdatePerson(userProcessContainer,personDirectory,selectedRowIndex,city,system);
    userProcessContainer.add("viewupdateperson", viewupdateperson);
    CardLayout layout = (CardLayout) userProcessContainer.getLayout();
    layout.next(userProcessContainer);
      
        
    }//GEN-LAST:event_btnViewDetailsActionPerformed

    
    private void backAction(){
        userProcessContainer.remove(this);
        Component [] componentArray = userProcessContainer.getComponents();
        Component c = componentArray[componentArray.length-1];
        ManagePerson mp = (ManagePerson) c;
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable PersonViewTable;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnViewDetails;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
