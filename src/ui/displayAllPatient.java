/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Patient;
import model.PatientDirectory;

import model.PersonDirectory;

/**
 *
 * @author meghanshubhatt
 */
public class displayAllPatient extends javax.swing.JPanel {

    /**
     * Creates new form displayAllPatient
     */
    private Patient patient;
    private JPanel userProcessContainer;
    private PatientDirectory patientDirectory;
    public displayAllPatient(JPanel userProcessContainer, PatientDirectory patientDirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.patientDirectory = patientDirectory;
        refreshTable();
    }
    
    public void refreshTable(){
    int rowCount = tblPatientTable.getRowCount();
    DefaultTableModel model = (DefaultTableModel) tblPatientTable.getModel();
    for(int i=rowCount-1;i>=0;i--){
        model.removeRow(i);
    }
    for (Patient s : patientDirectory.getPatientList()) {
        Object row[] = new Object[6];
        row[0] = s.getPerson().getPersonId();
        row[1] = s.getPerson().getFullName();
        row[2] = s.getPerson().getPhoneNumber();
        row[3] = s.getPerson().getHouse().getCommunity().getCity();
        row[4] = s.getPerson().getHouse().getCommunity();
        row[5] = s.getEncounterHistory().get(s.getEncounterHistory().size()-1).getVitalSigns().isIsNormal();

        model.addRow(row);
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPatientTable = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        jEncounterBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        tblPatientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient ID", "Patient Name", "Contact Number", "City Name", "Community Name", "Health Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPatientTable);

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jEncounterBtn.setText("View Encounter");
        jEncounterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEncounterBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setText("                            Display All Patients");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jEncounterBtn)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addGap(81, 81, 81)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 795, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jEncounterBtn)
                .addContainerGap(44, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
         backAction();
    }//GEN-LAST:event_btnBackActionPerformed

    private void jEncounterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEncounterBtnActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = tblPatientTable.getSelectedRow();

        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select the record");
            return;
        }
        // personDirectory.getPersonList().get(selecteRowIndex)
        System.out.println(selectedRowIndex);
        CreateEncounterJPanel encounterJPanel = new CreateEncounterJPanel(userProcessContainer,patientDirectory,selectedRowIndex);
        userProcessContainer.add("displayallpatient", encounterJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jEncounterBtnActionPerformed
    private void backAction(){
        userProcessContainer.remove(this);
        Component [] componentArray = userProcessContainer.getComponents();
        Component c = componentArray[componentArray.length-1];
        PatientControlPanel mp = (PatientControlPanel) c;
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton jEncounterBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPatientTable;
    // End of variables declaration//GEN-END:variables
}
